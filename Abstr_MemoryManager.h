/*
 * File:   MemoryManager.h
 * Authors: INSERT YOUR NAME HERE
 * Strategy: INSERT THE MEMORY MANAGEMENT SCHEMA HERE (THE ALGORITHM YOU ARE IMPLEMENTING -- RANDOMLY GENERATED BY MOODLE AS A VARIATION)
 *
 * Created on ...
 */

#ifndef MEMORYMANAGER_H
#define	MEMORYMANAGER_H

#include "Abstr_MemoryChunk.h"

//enum MemoryAllocationAlgorithm {FirstFit, NextFit, BestFit, WorstFit};

class MemoryManager {
    friend class ProblemTester;
public: // do not change
    MemoryManager();
    MemoryManager(const MemoryManager& orig);
    virtual ~MemoryManager();
public: // do not change
    MemoryChunk* allocateMemory(unsigned int size);
    void deallocateMemory(MemoryChunk* chunk);
    void showMemory();
    unsigned int getNumMemoryChunks();
    MemoryChunk* getMemoryChunk(unsigned int index);
private: // do not change
    std::list<MemoryChunk*>* _chunks;
    
private: // private attributes and methods
    // INSERT YOUR CODE HERE
    // ...

};

#endif	/* MEMORYMANAGER_H */

